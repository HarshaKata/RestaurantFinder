{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { restaurantApi } from '../api/restaurantApi';\n\n// const AddRestaurant = () => {\n//     const navigate = useNavigate();\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [addressSuggestions, setAddressSuggestions] = useState([]);\n//     const [showSuggestions, setShowSuggestions] = useState(false);\n\n//     const categories = [\n//         \"Fine Dining\",\n//         \"Casual Dining\",\n//         \"Fast Food\",\n//         \"CafÃ©\",\n//         \"Bistro\",\n//         \"Pizzeria\",\n//         \"Steakhouse\",\n//         \"Seafood\",\n//         \"Vegetarian\",\n//         \"Food Truck\",\n//         \"Buffet\",\n//         \"Pub\",\n//         \"Other\"\n//     ];\n\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         description: '',\n//         category: '',\n//         address: '',\n//         contactInfo: '',\n//         cuisineType: '',\n//         latitude: '',\n//         longitude: '',\n//         priceRange: '',\n//         restaurantId: ''\n//     });\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError('');\n\n//         // Check if all required fields are filled\n//         if (!formData.latitude || !formData.longitude) {\n//             setError('Please select a valid address from the suggestions');\n//             setLoading(false);\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch('http://localhost:8081/restaurants/addRestaurant', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify(formData)\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error('Failed to add restaurant');\n//             }\n\n//             // If successful, navigate back to owner dashboard\n//             navigate('/owner-dashboard');\n//         } catch (err) {\n//             console.error('Error adding restaurant:', err);\n//             setError('Failed to add restaurant. Please try again.');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleAddressChange = async (e) => {\n//         const address = e.target.value;\n//         setFormData(prev => ({ ...prev, address }));\n\n//         if (address.length > 3) {\n//             try {\n//                 const response = await fetch(\n//                     `http://localhost:8081/api/search/locations?query=${encodeURIComponent(address)}`,\n//                     {\n//                         headers: {\n//                             'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//                             'Accept': 'application/json'\n//                         }\n//                     }\n//                 );\n\n//                 if (!response.ok) throw new Error('Failed to fetch location data');\n\n//                 const suggestions = await response.json();\n//                 setAddressSuggestions(suggestions);\n//                 setShowSuggestions(true);\n//             } catch (error) {\n//                 console.error('Error fetching addresses:', error);\n//             }\n//         } else {\n//             setAddressSuggestions([]);\n//             setShowSuggestions(false);\n//         }\n//     };\n\n//     const handleSelectAddress = (suggestion) => {\n//         setFormData(prev => ({\n//             ...prev,\n//             address: suggestion.displayName,\n//             latitude: suggestion.latitude,\n//             longitude: suggestion.longitude\n//         }));\n//         setShowSuggestions(false);\n//     };\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData(prev => ({\n//             ...prev,\n//             [name]: value\n//         }));\n//     };\n\n//     return (\n//         <div className=\"min-h-screen bg-gray-100 py-6 px-4 sm:px-6 lg:px-8\">\n//             <div className=\"max-w-2xl mx-auto\">\n//                 <div className=\"bg-white rounded-lg shadow-md p-6\">\n//                     <div className=\"flex justify-between items-center mb-6\">\n//                         <h2 className=\"text-2xl font-bold\">Add New Restaurant</h2>\n//                         <button\n//                             onClick={() => navigate('/owner-dashboard')}\n//                             className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n//                         >\n//                             Back\n//                         </button>\n//                     </div>\n\n//                     {error && (\n//                         <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//                             {error}\n//                         </div>\n//                     )}\n\n//                     <form onSubmit={handleSubmit} className=\"space-y-6\">\n//                         {/* Name field */}\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Name</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"name\"\n//                                 required\n//                                 value={formData.name}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         {/* Category dropdown */}\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Category</label>\n//                             <select\n//                                 name=\"category\"\n//                                 required\n//                                 value={formData.category}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             >\n//                                 <option value=\"\">Select a category</option>\n//                                 {categories.map((category, index) => (\n//                                     <option key={index} value={category}>\n//                                         {category}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         </div>\n\n//                         {/* Address field with suggestions */}\n//                         <div className=\"relative\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Address</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"address\"\n//                                 required\n//                                 value={formData.address}\n//                                 onChange={handleAddressChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                             {showSuggestions && addressSuggestions.length > 0 && (\n//                                 <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\">\n//                                     {addressSuggestions.map((suggestion, index) => (\n//                                         <div\n//                                             key={index}\n//                                             className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\n//                                             onClick={() => handleSelectAddress(suggestion)}\n//                                         >\n//                                             {suggestion.displayName}\n//                                         </div>\n//                                     ))}\n//                                 </div>\n//                             )}\n//                         </div>\n\n//                         {/* Coordinates display */}\n//                         <div className=\"grid grid-cols-2 gap-4\">\n//                             <div>\n//                                 <label className=\"block text-sm font-medium text-gray-700\">Latitude</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={formData.latitude}\n//                                     readOnly\n//                                     className=\"mt-1 block w-full rounded-md border border-gray-300 bg-gray-50 px-3 py-2\"\n//                                 />\n//                             </div>\n//                             <div>\n//                                 <label className=\"block text-sm font-medium text-gray-700\">Longitude</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={formData.longitude}\n//                                     readOnly\n//                                     className=\"mt-1 block w-full rounded-md border border-gray-300 bg-gray-50 px-3 py-2\"\n//                                 />\n//                             </div>\n//                         </div>\n\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Contact Info</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"contactInfo\"\n//                                 required\n//                                 value={formData.contactInfo}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n//                             <textarea\n//                                 name=\"description\"\n//                                 required\n//                                 value={formData.description}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Cuisine Type</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"cuisineType\"\n//                                 required\n//                                 value={formData.cuisineType}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Price Range</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"priceRange\"\n//                                 required\n//                                 value={formData.priceRange}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         <div className=\"flex justify-end\">\n//                             <button\n//                                 type=\"submit\"\n//                                 disabled={loading || !formData.latitude || !formData.longitude}\n//                                 className={`px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ${\n//                                     (loading || !formData.latitude || !formData.longitude) ? 'opacity-50 cursor-not-allowed' : ''\n//                                 }`}\n//                             >\n//                                 {loading ? 'Adding...' : 'Add Restaurant'}\n//                             </button>\n//                         </div>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default AddRestaurant;","map":{"version":3,"names":[],"sources":["/Users/harshakata/Downloads/restaurant-finder-frontend/src/components/AddRestaurant.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import { restaurantApi } from '../api/restaurantApi';\n\n// const AddRestaurant = () => {\n//     const navigate = useNavigate();\n//     const [loading, setLoading] = useState(false);\n//     const [error, setError] = useState('');\n//     const [addressSuggestions, setAddressSuggestions] = useState([]);\n//     const [showSuggestions, setShowSuggestions] = useState(false);\n\n//     const categories = [\n//         \"Fine Dining\",\n//         \"Casual Dining\",\n//         \"Fast Food\",\n//         \"CafÃ©\",\n//         \"Bistro\",\n//         \"Pizzeria\",\n//         \"Steakhouse\",\n//         \"Seafood\",\n//         \"Vegetarian\",\n//         \"Food Truck\",\n//         \"Buffet\",\n//         \"Pub\",\n//         \"Other\"\n//     ];\n\n//     const [formData, setFormData] = useState({\n//         name: '',\n//         description: '',\n//         category: '',\n//         address: '',\n//         contactInfo: '',\n//         cuisineType: '',\n//         latitude: '',\n//         longitude: '',\n//         priceRange: '',\n//         restaurantId: ''\n//     });\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         setLoading(true);\n//         setError('');\n\n//         // Check if all required fields are filled\n//         if (!formData.latitude || !formData.longitude) {\n//             setError('Please select a valid address from the suggestions');\n//             setLoading(false);\n//             return;\n//         }\n\n//         try {\n//             const response = await fetch('http://localhost:8081/restaurants/addRestaurant', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//                     'Content-Type': 'application/json'\n//                 },\n//                 body: JSON.stringify(formData)\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error('Failed to add restaurant');\n//             }\n\n//             // If successful, navigate back to owner dashboard\n//             navigate('/owner-dashboard');\n//         } catch (err) {\n//             console.error('Error adding restaurant:', err);\n//             setError('Failed to add restaurant. Please try again.');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleAddressChange = async (e) => {\n//         const address = e.target.value;\n//         setFormData(prev => ({ ...prev, address }));\n\n//         if (address.length > 3) {\n//             try {\n//                 const response = await fetch(\n//                     `http://localhost:8081/api/search/locations?query=${encodeURIComponent(address)}`,\n//                     {\n//                         headers: {\n//                             'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//                             'Accept': 'application/json'\n//                         }\n//                     }\n//                 );\n\n//                 if (!response.ok) throw new Error('Failed to fetch location data');\n\n//                 const suggestions = await response.json();\n//                 setAddressSuggestions(suggestions);\n//                 setShowSuggestions(true);\n//             } catch (error) {\n//                 console.error('Error fetching addresses:', error);\n//             }\n//         } else {\n//             setAddressSuggestions([]);\n//             setShowSuggestions(false);\n//         }\n//     };\n\n//     const handleSelectAddress = (suggestion) => {\n//         setFormData(prev => ({\n//             ...prev,\n//             address: suggestion.displayName,\n//             latitude: suggestion.latitude,\n//             longitude: suggestion.longitude\n//         }));\n//         setShowSuggestions(false);\n//     };\n\n//     const handleChange = (e) => {\n//         const { name, value } = e.target;\n//         setFormData(prev => ({\n//             ...prev,\n//             [name]: value\n//         }));\n//     };\n\n//     return (\n//         <div className=\"min-h-screen bg-gray-100 py-6 px-4 sm:px-6 lg:px-8\">\n//             <div className=\"max-w-2xl mx-auto\">\n//                 <div className=\"bg-white rounded-lg shadow-md p-6\">\n//                     <div className=\"flex justify-between items-center mb-6\">\n//                         <h2 className=\"text-2xl font-bold\">Add New Restaurant</h2>\n//                         <button\n//                             onClick={() => navigate('/owner-dashboard')}\n//                             className=\"px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700\"\n//                         >\n//                             Back\n//                         </button>\n//                     </div>\n\n//                     {error && (\n//                         <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//                             {error}\n//                         </div>\n//                     )}\n\n//                     <form onSubmit={handleSubmit} className=\"space-y-6\">\n//                         {/* Name field */}\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Name</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"name\"\n//                                 required\n//                                 value={formData.name}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         {/* Category dropdown */}\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Category</label>\n//                             <select\n//                                 name=\"category\"\n//                                 required\n//                                 value={formData.category}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             >\n//                                 <option value=\"\">Select a category</option>\n//                                 {categories.map((category, index) => (\n//                                     <option key={index} value={category}>\n//                                         {category}\n//                                     </option>\n//                                 ))}\n//                             </select>\n//                         </div>\n\n//                         {/* Address field with suggestions */}\n//                         <div className=\"relative\">\n//                             <label className=\"block text-sm font-medium text-gray-700\">Address</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"address\"\n//                                 required\n//                                 value={formData.address}\n//                                 onChange={handleAddressChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                             {showSuggestions && addressSuggestions.length > 0 && (\n//                                 <div className=\"absolute z-10 w-full mt-1 bg-white border border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\">\n//                                     {addressSuggestions.map((suggestion, index) => (\n//                                         <div\n//                                             key={index}\n//                                             className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\n//                                             onClick={() => handleSelectAddress(suggestion)}\n//                                         >\n//                                             {suggestion.displayName}\n//                                         </div>\n//                                     ))}\n//                                 </div>\n//                             )}\n//                         </div>\n\n//                         {/* Coordinates display */}\n//                         <div className=\"grid grid-cols-2 gap-4\">\n//                             <div>\n//                                 <label className=\"block text-sm font-medium text-gray-700\">Latitude</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={formData.latitude}\n//                                     readOnly\n//                                     className=\"mt-1 block w-full rounded-md border border-gray-300 bg-gray-50 px-3 py-2\"\n//                                 />\n//                             </div>\n//                             <div>\n//                                 <label className=\"block text-sm font-medium text-gray-700\">Longitude</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     value={formData.longitude}\n//                                     readOnly\n//                                     className=\"mt-1 block w-full rounded-md border border-gray-300 bg-gray-50 px-3 py-2\"\n//                                 />\n//                             </div>\n//                         </div>\n                        \n\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Contact Info</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"contactInfo\"\n//                                 required\n//                                 value={formData.contactInfo}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Description</label>\n//                             <textarea\n//                                 name=\"description\"\n//                                 required\n//                                 value={formData.description}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Cuisine Type</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"cuisineType\"\n//                                 required\n//                                 value={formData.cuisineType}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         <div>\n//                             <label className=\"block text-sm font-medium text-gray-700\">Price Range</label>\n//                             <input\n//                                 type=\"text\"\n//                                 name=\"priceRange\"\n//                                 required\n//                                 value={formData.priceRange}\n//                                 onChange={handleChange}\n//                                 className=\"mt-1 block w-full rounded-md border border-gray-300 px-3 py-2 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500\"\n//                             />\n//                         </div>\n\n//                         <div className=\"flex justify-end\">\n//                             <button\n//                                 type=\"submit\"\n//                                 disabled={loading || !formData.latitude || !formData.longitude}\n//                                 className={`px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 ${\n//                                     (loading || !formData.latitude || !formData.longitude) ? 'opacity-50 cursor-not-allowed' : ''\n//                                 }`}\n//                             >\n//                                 {loading ? 'Adding...' : 'Add Restaurant'}\n//                             </button>\n//                         </div>\n//                     </form>\n//                 </div>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default AddRestaurant;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}