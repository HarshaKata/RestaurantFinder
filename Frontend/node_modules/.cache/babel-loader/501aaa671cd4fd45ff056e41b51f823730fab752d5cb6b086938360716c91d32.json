{"ast":null,"code":"const API_BASE_URL = 'http://54.183.201.125:8081';\nexport const reviewApi = {\n  getReviews: async restaurantId => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`${API_BASE_URL}/reviews/getReviews/${restaurantId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to fetch reviews');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n      throw error;\n    }\n  },\n  addReview: async reviewData => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`${API_BASE_URL}/reviews/addReview`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reviewData)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to add review');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error adding review:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","reviewApi","getReviews","restaurantId","token","localStorage","getItem","response","fetch","headers","ok","Error","json","error","console","addReview","reviewData","method","body","JSON","stringify"],"sources":["/Users/harshakata/Downloads/restaurant-finder-frontend/src/api/reviewApi.js"],"sourcesContent":["const API_BASE_URL = 'http://54.183.201.125:8081';\n\nexport const reviewApi = {\n  getReviews: async (restaurantId) => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`${API_BASE_URL}/reviews/getReviews/${restaurantId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch reviews');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching reviews:', error);\n      throw error;\n    }\n  },\n\n  addReview: async (reviewData) => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await fetch(`${API_BASE_URL}/reviews/addReview`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reviewData)\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to add review');\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error adding review:', error);\n      throw error;\n    }\n  }\n};\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,4BAA4B;AAEjD,OAAO,MAAMC,SAAS,GAAG;EACvBC,UAAU,EAAE,MAAOC,YAAY,IAAK;IAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,uBAAuBG,YAAY,EAAE,EAAE;QACjFM,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,SAAS,EAAE,MAAOC,UAAU,IAAK;IAC/B,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,oBAAoB,EAAE;QAChEiB,MAAM,EAAE,MAAM;QACdR,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB,CAAC;QACDc,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;MACjC,CAAC,CAAC;MAEF,IAAI,CAACT,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}