{"ast":null,"code":"\n\n// import React, { useState, useEffect } from 'react';\n// import { useAuth } from '../contexts/AuthContext';\n// import { useNavigate } from 'react-router-dom';\n// import { restaurantApi } from '../api/restaurantApi';\n// // In your Dashboard.js or relevant component\n// import LocationSearch from './LocationSearch';\n\n// const Dashboard = () => {\n//     const { user, logout } = useAuth();\n//     const navigate = useNavigate();\n//     const [restaurants, setRestaurants] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n\n//     // Existing search states\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [category, setCategory] = useState('');\n//     const [priceRange, setPriceRange] = useState('');\n//     const [rating, setRating] = useState('');\n\n//     // Location search states\n//     const [locationInput, setLocationInput] = useState('');\n//     const [suggestions, setSuggestions] = useState([]);\n//     const [selectedLocation, setSelectedLocation] = useState(null);\n//     const [radius, setRadius] = useState(2);\n\n//     useEffect(() => {\n//         fetchRestaurants();\n//     }, []);\n//     const fetchLocationSuggestions = async (query) => {\n//         if (query.length < 3) return;\n\n//         try {\n//             const response = await fetch(\n//                 `http://localhost:8081/api/search/locations?query=${encodeURIComponent(query)}`,\n//                 {\n//                     headers: {\n//                         'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                     }\n//                 }\n//             );\n\n//             if (!response.ok) throw new Error('Failed to fetch suggestions');\n\n//             const data = await response.json();\n//             setSuggestions(data);\n//         } catch (error) {\n//             console.error('Error:', error);\n//             setError('Failed to fetch location suggestions');\n//         }\n//     };\n\n//     const selectLocation = (displayName, latitude, longitude) => {\n//         setLocationInput(displayName);\n//         setSelectedLocation({ displayName, latitude, longitude });\n//         setSuggestions([]); // Clear suggestions\n//     };\n\n//     const searchByLocation = async () => {\n//         if (!selectedLocation) {\n//             setError('Please select a location from the suggestions');\n//             return;\n//         }\n\n//         setLoading(true);\n//         try {\n//             const response = await fetch(\n//                 `http://localhost:8081/api/search/nearby?latitude=${selectedLocation.latitude}&longitude=${selectedLocation.longitude}&radius=${radius}`,\n//                 {\n//                     headers: {\n//                         'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                     }\n//                 }\n//             );\n\n//             if (!response.ok) throw new Error('Search failed');\n\n//             const data = await response.json();\n//             setRestaurants(data);\n//             setError('');\n//         } catch (error) {\n//             console.error('Error:', error);\n//             setError('Error searching restaurants. Please try again.');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleLocationInputChange = (e) => {\n//         const value = e.target.value;\n//         setLocationInput(value);\n//         setSelectedLocation(null);\n\n//         clearTimeout(window.debounceTimeout);\n//         window.debounceTimeout = setTimeout(() => {\n//             fetchLocationSuggestions(value);\n//         }, 300);\n//     };\n\n//     const handleLocationClear = () => {\n//         setLocationInput('');\n//         setSelectedLocation(null);\n//         setRadius(2);\n//         setSuggestions([]);\n//         fetchRestaurants();\n//     };\n//     const fetchRestaurants = async () => {\n//         try {\n//             const data = await restaurantApi.getAllRestaurants();\n//             setRestaurants(data);\n//             setError('');\n//         } catch (err) {\n//             setError('Failed to fetch restaurants');\n//             console.error(err);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleSearch = async (e) => {\n//         e.preventDefault();\n//         setLoading(true);\n\n//         try {\n//             // Construct query parameters\n//             const params = new URLSearchParams();\n//             if (searchTerm.trim()) params.append('q', searchTerm.trim());\n//             if (category) params.append('category', category);\n//             if (priceRange) params.append('price', priceRange); // This will now pass just the number\n//             if (rating) params.append('rating', rating); // Ensure rating is passed as integer\n\n//             // If no filters are applied, fetch all restaurants\n//             if (!params.toString()) {\n//                 fetchRestaurants();\n//                 return;\n//             }\n\n//             // Make API call to the search endpoint\n//             const response = await fetch(`http://localhost:8081/api/search?${params.toString()}`, {\n//                 method: 'GET',\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//                     'Content-Type': 'application/json'\n//                 }\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error('Failed to search restaurants');\n//             }\n\n//             const data = await response.json();\n//             setRestaurants(data);\n//             setError('');\n//         } catch (err) {\n//             setError('Failed to search restaurants');\n//             console.error(err);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleClear = () => {\n//         setSearchTerm('');\n//         setCategory('');\n//         setPriceRange('');\n//         setRating('');\n//         fetchRestaurants();\n//     };\n\n//     const handleLogout = () => {\n//         logout();\n//         navigate('/login');\n//     };\n\n//     if (loading) {\n//         return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n//     }\n\n//     return (\n//         <div className=\"min-h-screen bg-gray-100\">\n//             <nav className=\"bg-white shadow-lg\">\n//                 <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n//                     <div className=\"flex justify-between h-16\">\n//                         <div className=\"flex items-center\">\n//                             <h1 className=\"text-xl font-bold\">Restaurant Finder</h1>\n//                         </div>\n//                         <div className=\"flex items-center space-x-4\">\n//                             <button\n//                                 onClick={() => navigate('/location-search')}\n//                                 className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n//                             >\n//                                 Search by Location\n//                             </button>\n//                             <button\n//                                 onClick={handleLogout}\n//                                 className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\n//                             >\n//                                 Logout\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </nav>\n\n//             <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n//                 <div className=\"mb-6 bg-white p-6 rounded-lg shadow\">\n//                     <form onSubmit={handleSearch} className=\"space-y-4\">\n//                         <div className=\"flex flex-col md:flex-row gap-4\">\n//     <input\n//         type=\"text\"\n//         value={searchTerm}\n//         onChange={(e) => setSearchTerm(e.target.value)}\n//         placeholder=\"Search restaurants by name...\"\n//         className=\"flex-1 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n//     />\n\n//     <div className=\"relative\">\n//         <select\n//             value={category}\n//             onChange={(e) => setCategory(e.target.value)}\n//             className=\"appearance-none w-[200px] p-2 pr-8 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white\"\n//         >\n//             <option value=\"\">Select Category</option>\n//             <option value=\"Fine Dining\">Fine Dining</option>\n//             <option value=\"Casual Dining\">Casual Dining</option>\n//             {/* ... other options ... */}\n//         </select>\n//         <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n//             <svg className=\"h-4 w-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n//             </svg>\n//         </div>\n//     </div>\n\n//     <div className=\"relative\">\n//         <select\n//             value={priceRange}\n//             onChange={(e) => setPriceRange(e.target.value)}\n//             className=\"appearance-none w-[200px] p-2 pr-8 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white\"\n//         >\n//             <option value=\"\">Select Price Range</option>\n//             <option value=\"Low\">Low</option>\n//             <option value=\"Medium\">Medium</option>\n//             <option value=\"High\">High</option>\n//         </select>\n//         <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n//             <svg className=\"h-4 w-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n//             </svg>\n//         </div>\n//     </div>\n\n//     <div className=\"relative\">\n//         <select\n//             value={rating}\n//             onChange={(e) => setRating(e.target.value)}\n//             className=\"appearance-none w-[200px] p-2 pr-8 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white\"\n//         >\n//             <option value=\"\">Select Rating</option>\n//             <option value=\"5\">5 ⭐</option>\n//             <option value=\"4\">4 ⭐</option>\n//             <option value=\"3\">3 ⭐</option>\n//             <option value=\"2\">2 ⭐</option>\n//             <option value=\"1\">1 ⭐</option>\n//         </select>\n//         <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n//             <svg className=\"h-4 w-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n//             </svg>\n//         </div>\n//     </div>\n// </div>\n\n//                         <div className=\"flex gap-4\">\n//                             <button\n//                                 type=\"submit\"\n//                                 className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n//                             >\n//                                 Search\n//                             </button>\n//                             {(searchTerm || category || priceRange || rating) && (\n//                                 <button\n//                                     type=\"button\"\n//                                     onClick={handleClear}\n//                                     className=\"px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n//                                 >\n//                                     Clear All\n//                                 </button>\n//                             )}\n//                         </div>\n//                     </form>\n//                 </div>\n\n//                 {error && (\n//                     <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//                         {error}\n//                     </div>\n//                 )}\n\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//                     {restaurants.map((restaurant) => (\n//                         <div key={restaurant.id} className=\"bg-white overflow-hidden shadow rounded-lg\">\n//                             <div className=\"px-4 py-5 sm:p-6\">\n//                                 <h3 className=\"text-lg font-medium text-gray-900\">{restaurant.name}</h3>\n//                                 <p className=\"mt-1 text-sm text-gray-600\">{restaurant.description}</p>\n//                                 <div className=\"mt-4\">\n//                                     <p className=\"text-sm text-gray-500\">Location: {restaurant.address}</p>\n//                                     <p className=\"text-sm text-gray-500\">Cuisine: {restaurant.cuisineType}</p>\n//                                     <button\n//                                         onClick={() => navigate(`/restaurant/${restaurant.id}`)}\n//                                         className=\"mt-4 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\">\n//                                         View Reviews\n//                                     </button>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     ))}\n//                 </div>\n\n//                 {restaurants.length === 0 && !loading && !error && (\n//                     <div className=\"text-center text-gray-500 mt-4\">\n//                         No restaurants found.\n//                     </div>\n//                 )}\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["/Users/harshakata/Downloads/restaurant-finder-frontend/src/components/Dashboard.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from 'react';\n// import { useAuth } from '../contexts/AuthContext';\n// import { useNavigate } from 'react-router-dom';\n// import { restaurantApi } from '../api/restaurantApi';\n// // In your Dashboard.js or relevant component\n// import LocationSearch from './LocationSearch';\n\n// const Dashboard = () => {\n//     const { user, logout } = useAuth();\n//     const navigate = useNavigate();\n//     const [restaurants, setRestaurants] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n\n//     // Existing search states\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [category, setCategory] = useState('');\n//     const [priceRange, setPriceRange] = useState('');\n//     const [rating, setRating] = useState('');\n\n//     // Location search states\n//     const [locationInput, setLocationInput] = useState('');\n//     const [suggestions, setSuggestions] = useState([]);\n//     const [selectedLocation, setSelectedLocation] = useState(null);\n//     const [radius, setRadius] = useState(2);\n\n//     useEffect(() => {\n//         fetchRestaurants();\n//     }, []);\n//     const fetchLocationSuggestions = async (query) => {\n//         if (query.length < 3) return;\n        \n//         try {\n//             const response = await fetch(\n//                 `http://localhost:8081/api/search/locations?query=${encodeURIComponent(query)}`,\n//                 {\n//                     headers: {\n//                         'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                     }\n//                 }\n//             );\n            \n//             if (!response.ok) throw new Error('Failed to fetch suggestions');\n            \n//             const data = await response.json();\n//             setSuggestions(data);\n//         } catch (error) {\n//             console.error('Error:', error);\n//             setError('Failed to fetch location suggestions');\n//         }\n//     };\n    \n//     const selectLocation = (displayName, latitude, longitude) => {\n//         setLocationInput(displayName);\n//         setSelectedLocation({ displayName, latitude, longitude });\n//         setSuggestions([]); // Clear suggestions\n//     };\n    \n//     const searchByLocation = async () => {\n//         if (!selectedLocation) {\n//             setError('Please select a location from the suggestions');\n//             return;\n//         }\n    \n//         setLoading(true);\n//         try {\n//             const response = await fetch(\n//                 `http://localhost:8081/api/search/nearby?latitude=${selectedLocation.latitude}&longitude=${selectedLocation.longitude}&radius=${radius}`,\n//                 {\n//                     headers: {\n//                         'Authorization': `Bearer ${localStorage.getItem('token')}`\n//                     }\n//                 }\n//             );\n            \n//             if (!response.ok) throw new Error('Search failed');\n            \n//             const data = await response.json();\n//             setRestaurants(data);\n//             setError('');\n//         } catch (error) {\n//             console.error('Error:', error);\n//             setError('Error searching restaurants. Please try again.');\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n    \n//     const handleLocationInputChange = (e) => {\n//         const value = e.target.value;\n//         setLocationInput(value);\n//         setSelectedLocation(null);\n    \n//         clearTimeout(window.debounceTimeout);\n//         window.debounceTimeout = setTimeout(() => {\n//             fetchLocationSuggestions(value);\n//         }, 300);\n//     };\n    \n//     const handleLocationClear = () => {\n//         setLocationInput('');\n//         setSelectedLocation(null);\n//         setRadius(2);\n//         setSuggestions([]);\n//         fetchRestaurants();\n//     };\n//     const fetchRestaurants = async () => {\n//         try {\n//             const data = await restaurantApi.getAllRestaurants();\n//             setRestaurants(data);\n//             setError('');\n//         } catch (err) {\n//             setError('Failed to fetch restaurants');\n//             console.error(err);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleSearch = async (e) => {\n//         e.preventDefault();\n//         setLoading(true);\n\n//         try {\n//             // Construct query parameters\n//             const params = new URLSearchParams();\n//             if (searchTerm.trim()) params.append('q', searchTerm.trim());\n//             if (category) params.append('category', category);\n//             if (priceRange) params.append('price', priceRange); // This will now pass just the number\n//             if (rating) params.append('rating', rating); // Ensure rating is passed as integer\n\n//             // If no filters are applied, fetch all restaurants\n//             if (!params.toString()) {\n//                 fetchRestaurants();\n//                 return;\n//             }\n\n//             // Make API call to the search endpoint\n//             const response = await fetch(`http://localhost:8081/api/search?${params.toString()}`, {\n//                 method: 'GET',\n//                 headers: {\n//                     'Authorization': `Bearer ${localStorage.getItem('token')}`,\n//                     'Content-Type': 'application/json'\n//                 }\n//             });\n\n//             if (!response.ok) {\n//                 throw new Error('Failed to search restaurants');\n//             }\n\n//             const data = await response.json();\n//             setRestaurants(data);\n//             setError('');\n//         } catch (err) {\n//             setError('Failed to search restaurants');\n//             console.error(err);\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     const handleClear = () => {\n//         setSearchTerm('');\n//         setCategory('');\n//         setPriceRange('');\n//         setRating('');\n//         fetchRestaurants();\n//     };\n\n//     const handleLogout = () => {\n//         logout();\n//         navigate('/login');\n//     };\n\n//     if (loading) {\n//         return <div className=\"flex justify-center items-center h-screen\">Loading...</div>;\n//     }\n\n//     return (\n//         <div className=\"min-h-screen bg-gray-100\">\n//             <nav className=\"bg-white shadow-lg\">\n//                 <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n//                     <div className=\"flex justify-between h-16\">\n//                         <div className=\"flex items-center\">\n//                             <h1 className=\"text-xl font-bold\">Restaurant Finder</h1>\n//                         </div>\n//                         <div className=\"flex items-center space-x-4\">\n//                             <button\n//                                 onClick={() => navigate('/location-search')}\n//                                 className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700\"\n//                             >\n//                                 Search by Location\n//                             </button>\n//                             <button\n//                                 onClick={handleLogout}\n//                                 className=\"px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700\"\n//                             >\n//                                 Logout\n//                             </button>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </nav>\n\n\n//             <main className=\"max-w-7xl mx-auto py-6 sm:px-6 lg:px-8\">\n//                 <div className=\"mb-6 bg-white p-6 rounded-lg shadow\">\n//                     <form onSubmit={handleSearch} className=\"space-y-4\">\n//                         <div className=\"flex flex-col md:flex-row gap-4\">\n//     <input\n//         type=\"text\"\n//         value={searchTerm}\n//         onChange={(e) => setSearchTerm(e.target.value)}\n//         placeholder=\"Search restaurants by name...\"\n//         className=\"flex-1 p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n//     />\n    \n//     <div className=\"relative\">\n//         <select\n//             value={category}\n//             onChange={(e) => setCategory(e.target.value)}\n//             className=\"appearance-none w-[200px] p-2 pr-8 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white\"\n//         >\n//             <option value=\"\">Select Category</option>\n//             <option value=\"Fine Dining\">Fine Dining</option>\n//             <option value=\"Casual Dining\">Casual Dining</option>\n//             {/* ... other options ... */}\n//         </select>\n//         <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n//             <svg className=\"h-4 w-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n//             </svg>\n//         </div>\n//     </div>\n\n//     <div className=\"relative\">\n//         <select\n//             value={priceRange}\n//             onChange={(e) => setPriceRange(e.target.value)}\n//             className=\"appearance-none w-[200px] p-2 pr-8 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white\"\n//         >\n//             <option value=\"\">Select Price Range</option>\n//             <option value=\"Low\">Low</option>\n//             <option value=\"Medium\">Medium</option>\n//             <option value=\"High\">High</option>\n//         </select>\n//         <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n//             <svg className=\"h-4 w-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n//             </svg>\n//         </div>\n//     </div>\n\n//     <div className=\"relative\">\n//         <select\n//             value={rating}\n//             onChange={(e) => setRating(e.target.value)}\n//             className=\"appearance-none w-[200px] p-2 pr-8 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500 bg-white\"\n//         >\n//             <option value=\"\">Select Rating</option>\n//             <option value=\"5\">5 ⭐</option>\n//             <option value=\"4\">4 ⭐</option>\n//             <option value=\"3\">3 ⭐</option>\n//             <option value=\"2\">2 ⭐</option>\n//             <option value=\"1\">1 ⭐</option>\n//         </select>\n//         <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n//             <svg className=\"h-4 w-4 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n//             </svg>\n//         </div>\n//     </div>\n// </div>\n\n//                         <div className=\"flex gap-4\">\n//                             <button\n//                                 type=\"submit\"\n//                                 className=\"px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n//                             >\n//                                 Search\n//                             </button>\n//                             {(searchTerm || category || priceRange || rating) && (\n//                                 <button\n//                                     type=\"button\"\n//                                     onClick={handleClear}\n//                                     className=\"px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n//                                 >\n//                                     Clear All\n//                                 </button>\n//                             )}\n//                         </div>\n//                     </form>\n//                 </div>\n\n//                 {error && (\n//                     <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n//                         {error}\n//                     </div>\n//                 )}\n\n//                 <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//                     {restaurants.map((restaurant) => (\n//                         <div key={restaurant.id} className=\"bg-white overflow-hidden shadow rounded-lg\">\n//                             <div className=\"px-4 py-5 sm:p-6\">\n//                                 <h3 className=\"text-lg font-medium text-gray-900\">{restaurant.name}</h3>\n//                                 <p className=\"mt-1 text-sm text-gray-600\">{restaurant.description}</p>\n//                                 <div className=\"mt-4\">\n//                                     <p className=\"text-sm text-gray-500\">Location: {restaurant.address}</p>\n//                                     <p className=\"text-sm text-gray-500\">Cuisine: {restaurant.cuisineType}</p>\n//                                     <button\n//                                         onClick={() => navigate(`/restaurant/${restaurant.id}`)}\n//                                         className=\"mt-4 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors\">\n//                                         View Reviews\n//                                     </button>\n//                                 </div>\n//                             </div>\n//                         </div>\n//                     ))}\n//                 </div>\n\n//                 {restaurants.length === 0 && !loading && !error && (\n//                     <div className=\"text-center text-gray-500 mt-4\">\n//                         No restaurants found.\n//                     </div>\n//                 )}\n//             </main>\n//         </div>\n//     );\n// };\n\n// export default Dashboard;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}